{
  "openapi": "3.1.0",
  "info": {
    "title": "API avec JWT",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:2025",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Gestion des Historiques d'Actions",
      "description": "API pour la gestion et le suivi des actions dans le système"
    },
    {
      "name": "Gestion des Dossiers Médicaux",
      "description": "API pour la gestion des dossiers médicaux des patients"
    },
    {
      "name": "Gestion des Utilisateurs",
      "description": "API pour la gestion des utilisateurs du système"
    },
    {
      "name": "Gestion des Prescriptions",
      "description": "API pour la gestion des prescriptions médicales"
    },
    {
      "name": "Gestion des Salles",
      "description": "API pour la gestion des salles d'hôpital"
    },
    {
      "name": "Gestion des Messages",
      "description": "API pour la gestion des messages entre utilisateurs"
    },
    {
      "name": "AUTHENTIFICATION",
      "description": "API pour se login dans notre système"
    },
    {
      "name": "Gestion des Consultations",
      "description": "API pour la gestion des consultations médicales"
    },
    {
      "name": "STATISTIQUES",
      "description": "API pour la récupération des statistiques (jour, mois, année)"
    },
    {
      "name": "Gestion des Factures",
      "description": "API pour la gestion des factures et des paiements"
    },
    {
      "name": "Gestion des Patients",
      "description": "API pour la gestion des patients de la clinique"
    },
    {
      "name": "Gestion des Rendez-vous",
      "description": "API pour la gestion des rendez-vous médicaux"
    }
  ],
  "paths": {
    "/Api/V1/clinique/utilisateurs/{userId}/photo": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Récupérer la photo de profil",
        "description": "Récupère la photo de profil d'un utilisateur",
        "operationId": "getPhotoByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Photo de profil récupérée avec succès",
            "content": {
              "image/jpeg": {

              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé ou photo inexistante",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors de la récupération de l'image",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Mettre à jour la photo de profil",
        "description": "Permet de mettre à jour la photo de profil d'un utilisateur",
        "operationId": "updatePhotoProfil",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID de l'utilisateur",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photoProfil": {
                    "type": "string",
                    "format": "binary",
                    "description": "Fichier image de profil"
                  }
                },
                "required": [
                  "photoProfil"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo de profil mise à jour avec succès",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Fichier photo invalide ou manquant",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors du traitement de l'image",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{id}/password": {
      "put": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Mettre à jour le mot de passe d'un utilisateur",
        "description": "Permet de changer le mot de passe d'un utilisateur spécifique. Les deux mots de passe fournis doivent correspondre.",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de l'utilisateur à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mot de passe mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide (mots de passe ne correspondent pas, trop courts, etc.)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{idUtilisateur}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Obtenir un utilisateur par son ID",
        "description": "Récupère les informations détaillées d'un utilisateur spécifique par son identifiant unique",
        "operationId": "findUtilisateurById",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "description": "ID de l'utilisateur à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur trouvé et retourné",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Format d'ID utilisateur invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Mettre à jour les informations d'un utilisateur",
        "description": "Modifie les détails d'un utilisateur existant avec les informations fournies",
        "operationId": "updateUtilisateur",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "description": "ID de l'utilisateur à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtilisateurRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Utilisateur mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de mise à jour invalides ou ID incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Supprimer un utilisateur",
        "description": "Supprime définitivement un utilisateur du système",
        "operationId": "deleteUtilisateur",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "description": "ID de l'utilisateur à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Utilisateur supprimé avec succès",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Format d'ID utilisateur invalide",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec l'ID fourni",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la suppression",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/salles/{id}": {
      "get": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Obtenir une salle par ID",
        "description": "Récupère les informations détaillées d'une salle spécifique par son ID",
        "operationId": "findSalleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la salle à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Salle trouvée et retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Format d'ID de salle invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Salle non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Mettre à jour une salle",
        "description": "Met à jour les informations d'une salle existante",
        "operationId": "updateSalle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la salle à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Salle mise à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de salle invalides ou numéro de salle déjà existant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Salle non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Supprimer une salle",
        "description": "Supprime définitivement une salle du système",
        "operationId": "deleteSalle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la salle à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Salle supprimée avec succès"
          },
          "400": {
            "description": "Format d'ID de salle invalide"
          },
          "404": {
            "description": "Salle non trouvée"
          },
          "500": {
            "description": "Erreur serveur lors de la suppression"
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/{idRendezVous}": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Obtenir un rendez-vous par son ID",
        "description": "Récupère les informations détaillées d'un rendez-vous spécifique",
        "operationId": "findRendezVousById",
        "parameters": [
          {
            "name": "idRendezVous",
            "in": "path",
            "description": "ID du rendez-vous à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Rendez-vous trouvé et retourné",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Format d'ID de rendez-vous invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Rendez-vous non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Mettre à jour un rendez-vous existant",
        "description": "Modifie les détails d'un rendez-vous programmé",
        "operationId": "updateRendezVous",
        "parameters": [
          {
            "name": "idRendezVous",
            "in": "path",
            "description": "ID du rendez-vous à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RendezVousRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Rendez-vous mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de mise à jour invalides ou conflit de planning",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Rendez-vous non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflit de planning (créneau déjà pris)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Supprimer un rendez-vous",
        "description": "Annule et supprime définitivement un rendez-vous du système",
        "operationId": "deleteRendezVous",
        "parameters": [
          {
            "name": "idRendezVous",
            "in": "path",
            "description": "ID du rendez-vous à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          }
        ],
        "responses": {
          "204": {
            "description": "Rendez-vous supprimé avec succès"
          },
          "400": {
            "description": "Format d'ID de rendez-vous invalide"
          },
          "404": {
            "description": "Rendez-vous non trouvé avec l'ID fourni"
          },
          "403": {
            "description": "Impossible de supprimer (e.g., passé, lié à consultation)"
          },
          "500": {
            "description": "Erreur interne du serveur lors de la suppression"
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/{idRendezVous}/cancel": {
      "put": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Annuler un rendez-vous",
        "description": "Change le statut d'un rendez-vous existant à 'annulé'",
        "operationId": "cancelRendezVous",
        "parameters": [
          {
            "name": "idRendezVous",
            "in": "path",
            "description": "ID du rendez-vous à annuler",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Rendez-vous annulé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Format d'ID de rendez-vous invalide ou RV déjà annulé/passé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Rendez-vous non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflit: impossible d'annuler (déjà terminé/annulé)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de l'annulation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/prescriptions/{id}": {
      "get": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Obtenir une prescription par son ID",
        "description": "Récupère les détails complets d'une prescription spécifique",
        "operationId": "findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la prescription à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Prescription trouvée et retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID de prescription invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Prescription introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Mettre à jour une prescription",
        "description": "Modifie les informations d'une prescription existante",
        "operationId": "updatePrescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la prescription à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Prescription mise à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de mise à jour invalides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Prescription, consultation, patient, médecin ou dossier médical introuvable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Supprimer une prescription",
        "description": "Supprime définitivement une prescription du système",
        "operationId": "deletePrescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la prescription à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Prescription supprimée avec succès"
          },
          "400": {
            "description": "ID de prescription invalide"
          },
          "404": {
            "description": "Prescription introuvable"
          },
          "500": {
            "description": "Erreur interne du serveur lors de la suppression"
          }
        }
      }
    },
    "/Api/V1/clinique/patients/{id}": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Obtenir un patient par son ID",
        "description": "Récupère les détails complets d'un patient spécifique",
        "operationId": "findById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID du patient à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Mettre à jour un patient",
        "description": "Modifie les informations d'un patient existant identifié par son ID",
        "operationId": "updatePatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID du patient à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Supprimer un patient",
        "description": "Supprime définitivement un patient du système (archivage selon politique de rétention)",
        "operationId": "deletePatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID du patient à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Api/V1/clinique/factures/update/{idFacture}": {
      "put": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Mettre à jour une facture",
        "description": "Met à jour tous les détails modifiables d'une facture existante (montant, date d'émission, etc.).",
        "operationId": "updateFacture",
        "parameters": [
          {
            "name": "idFacture",
            "in": "path",
            "description": "ID de la facture à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/update/{idDossierMedical}": {
      "put": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Mettre à jour un dossier médical",
        "description": "Modifie les informations d'un dossier médical existant",
        "operationId": "updateDossierMedical",
        "parameters": [
          {
            "name": "idDossierMedical",
            "in": "path",
            "description": "ID du dossier médical à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DossierMedicalRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dossier médical mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de mise à jour invalides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Dossier médical non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations/{id}": {
      "get": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Obtenir une consultation par son ID",
        "description": "Récupère les détails complets d'une consultation spécifique",
        "operationId": "findById_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la consultation à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Mettre à jour une consultation",
        "description": "Modifie les informations d'une consultation existante",
        "operationId": "updateConsultation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la consultation à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Supprimer une consultation",
        "description": "Supprime définitivement une consultation du système",
        "operationId": "deleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la consultation à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la suppression"
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister tous les utilisateurs",
        "description": "Récupère la liste complète de tous les utilisateurs enregistrés dans le système",
        "operationId": "findAllUtilisateur",
        "responses": {
          "200": {
            "description": "Liste complète des utilisateurs retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Créer un nouvel utilisateur",
        "description": "Enregistre un nouvel utilisateur dans le système avec les détails fournis",
        "operationId": "createUtilisateur",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtilisateurRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données utilisateur invalides ou incomplètes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Ressource requise non trouvée (ex: rôle non existant)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la création",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/salles": {
      "get": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Lister toutes les salles",
        "description": "Récupère une liste complète de toutes les salles du système",
        "operationId": "findAllSalle",
        "responses": {
          "200": {
            "description": "Liste complète des salles retournée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucune salle trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Créer une nouvelle salle",
        "description": "Crée une nouvelle salle dans le système avec les détails fournis",
        "operationId": "createSalle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Salle créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de la salle invalides ou numéro de salle déjà existant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur lors de la création",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/createRendezVous": {
      "post": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Créer un nouveau rendez-vous médical",
        "description": "Permet de programmer un nouveau rendez-vous entre un patient et un professionnel de santé",
        "operationId": "createRendezVous",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RendezVousRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Rendez-vous créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données du rendez-vous invalides ou conflit de planning",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Patient ou professionnel de santé non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la création",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/cancel-old": {
      "post": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Annuler un rendez-vous et supprimer facture liée",
        "description": "annuler un vieux rendezVous et supprimer la facture liée",
        "operationId": "cancelOldRendezVous",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/prescriptions/{consultationId}": {
      "post": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Ajouter une prescription à une consultation existante",
        "description": "Enregistre une nouvelle prescription médicale et la lie à une consultation existante.",
        "operationId": "addPrescription",
        "parameters": [
          {
            "name": "consultationId",
            "in": "path",
            "description": "ID de la consultation à laquelle la prescription sera ajoutée",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Prescription créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données de prescription invalides ou consultation, patient, médecin, ou dossier médical manquant dans la requête ou la consultation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Consultation non trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/patients": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Lister tous les patients",
        "description": "Récupère la liste complète des patients enregistrés dans le système",
        "operationId": "findAllPatients",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Créer un nouveau patient",
        "description": "Enregistre un nouveau patient dans le système avec ses informations personnelles et un dossier médical complet.",
        "operationId": "createPatient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Patient et dossier médical créés avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide (données manquantes ou format incorrect)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/messagerie/groupes": {
      "post": {
        "tags": [
          "groupe-controller"
        ],
        "operationId": "creerGroupe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GroupeResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/login": {
      "post": {
        "tags": [
          "AUTHENTIFICATION"
        ],
        "summary": "Login un utilisateur",
        "description": "Permet à un utilisateur de se connecter au système en fournissant email et mot de passe, et obtient un JWT.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Connexion réussie, JWT retourné",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentification échouée (informations d'identification invalides)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide (email ou mot de passe manquant)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/historiqueActions": {
      "get": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Lister tout l'historique des actions",
        "description": "Récupère la liste complète et chronologique de toutes les actions enregistrées dans le système",
        "operationId": "findAllHistoriqueActions",
        "responses": {
          "200": {
            "description": "Historique récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucune action trouvée - historique vide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Enregistrer une action manuellement",
        "description": "Permet d'enregistrer une action dans l'historique avec un utilisateur et une date spécifiés. Utilisation typique pour les audits ou les intégrations.",
        "operationId": "enregistrerActionManually",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoriqueActionRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Action enregistrée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données fournies invalides ou incomplètes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur associé non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/create/{idPatient}": {
      "post": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Créer un dossier médical pour un patient",
        "description": "Crée un nouveau dossier médical associé à un patient existant",
        "operationId": "createDossierMedicalForPatient",
        "parameters": [
          {
            "name": "idPatient",
            "in": "path",
            "description": "ID du patient associé",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DossierMedicalRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Dossier médical créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Données fournies invalides ou patient a déjà un dossier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Patient non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflit: Le patient a déjà un dossier médical",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations/{idConsultation}/prescriptions": {
      "get": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Obtenir les prescriptions d'une consultation",
        "description": "Récupère toutes les prescriptions associées à une consultation",
        "operationId": "findPrescriptionsByConsultationId",
        "parameters": [
          {
            "name": "idConsultation",
            "in": "path",
            "description": "ID de la consultation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Ajouter une prescription",
        "description": "Ajoute une prescription médicale à une consultation existante",
        "operationId": "addPrescriptionToConsultation",
        "parameters": [
          {
            "name": "idConsultation",
            "in": "path",
            "description": "ID de la consultation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de l'ajout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations/start/{idRendezVous}": {
      "post": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Démarrer une consultation à partir d'un rendez-vous",
        "description": "Crée et démarre une consultation liée à un rendez-vous existant",
        "operationId": "startConsultation",
        "parameters": [
          {
            "name": "idRendezVous",
            "in": "path",
            "description": "ID du rendez-vous à lier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations/emergency": {
      "post": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Créer une nouvelle consultation d'urgence (sans rendez-vous)",
        "description": "Enregistre une nouvelle consultation médicale d'urgence non liée à un rendez-vous existant.",
        "operationId": "createEmergencyConsultation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la création",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{idUtilisateur}/{statutConnect}": {
      "patch": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Mettre à jour du StatutConnect d'un utilisateur",
        "description": "Modifier le status d'un Utilisateur",
        "operationId": "updateUserConnectStatus",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "description": "ID de l'utilisateur à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          },
          {
            "name": "statutConnect",
            "in": "path",
            "description": "Nouveau statut d'activation ",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CONNECTE",
                "DECONNECTE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "StatutConnect utilisateur mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID utilisateur invalide ou paramètre de statut incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la mise à jour du StatutConnect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{idUtilisateur}/status/{isActive}": {
      "patch": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Mettre à jour le statut d'un utilisateur",
        "description": "Active ou désactive un compte utilisateur dans le système",
        "operationId": "updateUtilisateurStatus",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "description": "ID de l'utilisateur à mettre à jour",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123
          },
          {
            "name": "isActive",
            "in": "path",
            "description": "Nouveau statut d'activation (true pour actif, false pour inactif)",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Statut utilisateur mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID utilisateur invalide ou paramètre de statut incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec l'ID fourni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la mise à jour du statut",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/payer/{factureId}/{modePaiement}": {
      "patch": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Marquer une facture comme payée",
        "description": "Met à jour le statut d'une facture IMPAYEE à PAYEE.",
        "operationId": "payerFacture",
        "parameters": [
          {
            "name": "factureId",
            "in": "path",
            "description": "ID de la facture à marquer comme payée",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "modePaiement",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ESPECES",
                "CARTE_BANCAIRE",
                "VIREMENT",
                "CHEQUE",
                "MOBILE_MONEY"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{medecinId}/rendez-vous/confirmed/{date}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Récupérer les rendez-vous confirmés d'un médecin pour aujourd'hui",
        "description": "Recherche les rendez-vous confirmés d'un médecin spécifique (par son ID) pour la date d'aujourd'hui. Accessible uniquement par les MEDECINS.",
        "operationId": "getConfirmedRendezVousForMedecinAndDate",
        "parameters": [
          {
            "name": "medecinId",
            "in": "path",
            "description": "ID du médecin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "Date au format YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour le médecin et la date d'aujourd'hui",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID du médecin invalide",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Accès non autorisé (seul le médecin concerné ou un ADMIN peut accéder à ces informations)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{medecinId}/confirmed/from-today": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister les rendez-vous confirmés d'un médecin à partir d'aujourd'hui",
        "description": "Récupère tous les rendez-vous confirmés pour un médecin donné, à partir du jour actuel (sans tenir compte de l'heure passée du jour), triés chronologiquement par jour.",
        "operationId": "getConfirmedRendezVousFromTodayForMedecin",
        "parameters": [
          {
            "name": "medecinId",
            "in": "path",
            "description": "ID du médecin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous trouvés",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Médecin non trouvé (si le service vérifie l'existence du médecin)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/{medecinId}/confirmed/all": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister tous les rendez-vous confirmés d'un médecin",
        "description": "Récupère tous les rendez-vous confirmés pour un médecin donné, sans filtre de date, triés chronologiquement par jour.",
        "operationId": "getAllConfirmedRendezVousForMedecin",
        "parameters": [
          {
            "name": "medecinId",
            "in": "path",
            "description": "ID du médecin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous trouvés",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Médecin non trouvé (si le service vérifie l'existence du médecin)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/search": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Rechercher des utilisateurs",
        "description": "Recherche des utilisateurs par nom, prénom, email, téléphone, rôle ou statut de connexion. Requiert un terme de recherche d'au moins 2 caractères.",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Terme à rechercher (nom, prénom, email, téléphone, rôle, ou statut de connexion). Minimum 2 caractères.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs trouvés",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Terme de recherche invalide (moins de 2 caractères)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/role/{roleType}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Rechercher des utilisateurs par rôle",
        "description": "Récupère tous les utilisateurs ayant le rôle spécifié dans le système",
        "operationId": "findUtilisateurByRoleType",
        "parameters": [
          {
            "name": "roleType",
            "in": "path",
            "description": "Type de rôle pour filtrer",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "MEDECIN",
                "SECRETAIRE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs avec le rôle spécifié retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Paramètre de rôle invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Aucun utilisateur trouvé avec ce rôle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors du filtrage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/rendezvous/medecin/status": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Récupérer les rendez-vous d'un médecin par son nom et statut",
        "description": "Permet de filtrer les rendez-vous d'un médecin en spécifiant une partie de son nom (nom ou prénom) et un statut de rendez-vous. Accessible par ADMIN et MEDECIN.",
        "operationId": "getRendezVousForMedecinByStatus",
        "parameters": [
          {
            "name": "medecinName",
            "in": "query",
            "description": "Nom ou prénom du médecin (recherche partielle)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Dr. Jean"
          },
          {
            "name": "statut",
            "in": "query",
            "description": "Statut du rendez-vous (ex: CONFIRME, ANNULE, TERMINE)",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CONFIRME",
                "EN_ATTENTE",
                "ENCOURS",
                "ANNULE",
                "TERMINE"
              ]
            },
            "example": "CONFIRME"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour les critères donnés",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre de requête manquant ou invalide",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Accès non autorisé",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/rendezvous/medecin/search": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Rechercher les rendez-vous d'un médecin par terme de recherche",
        "description": "Recherche les rendez-vous d'un médecin en utilisant un terme qui peut correspondre à son nom, prénom, email ou ID. Accessible par ADMIN et MEDECIN.",
        "operationId": "getRendezVousByMedecinSearchTerm",
        "parameters": [
          {
            "name": "medecinSearchTerm",
            "in": "query",
            "description": "Terme de recherche (nom, prénom, email ou ID du médecin)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Dr. Dupont"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour le terme de recherche donné",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre de requête manquant ou invalide",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Accès non autorisé",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/nom/{nomUtilisateur}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Rechercher des utilisateurs par nom",
        "description": "Récupère tous les utilisateurs correspondant au nom spécifié (recherche partielle)",
        "operationId": "findUtilisateurByNom",
        "parameters": [
          {
            "name": "nomUtilisateur",
            "in": "path",
            "description": "Nom à rechercher",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Dupont"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs correspondants retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Paramètre de nom invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Aucun utilisateur trouvé avec ce nom",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/email/{emailUtilisateur}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Rechercher un utilisateur par email",
        "description": "Récupère un seul utilisateur par son adresse email unique",
        "operationId": "findUtilisateurByEmail",
        "parameters": [
          {
            "name": "emailUtilisateur",
            "in": "path",
            "description": "Adresse email à rechercher",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "utilisateur@exemple.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur trouvé et retourné",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Format d'email invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec cet email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilisateurResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/disconnected": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister les utilisateurs actuellement déconnectés",
        "description": "Récupère la liste de tous les utilisateurs dont le statut de connexion est 'DECONNECTE'.",
        "operationId": "getDisconnectedUsers",
        "responses": {
          "200": {
            "description": "Liste des utilisateurs déconnectés",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utilisateur"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utilisateur"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/disconnected/last-activity": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister les utilisateurs déconnectés triés par dernière déconnexion",
        "description": "Récupère la liste des utilisateurs actuellement déconnectés, triés par leur date de dernière déconnexion (les plus récents en premier).",
        "operationId": "getDisconnectedUsersByLastActivity",
        "responses": {
          "200": {
            "description": "Liste des utilisateurs déconnectés triés",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/connected": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister les utilisateurs actuellement connectés",
        "description": "Récupère la liste de tous les utilisateurs dont le statut de connexion est 'CONNECTE'.",
        "operationId": "getConnectedUsers",
        "responses": {
          "200": {
            "description": "Liste des utilisateurs connectés",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utilisateur"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utilisateur"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/connected/last-activity": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Lister les utilisateurs connectés triés par dernière activité",
        "description": "Récupère la liste des utilisateurs actuellement connectés, triés par leur date de dernière connexion (les plus récents en premier).",
        "operationId": "getConnectedUsersByLastActivity",
        "responses": {
          "200": {
            "description": "Liste des utilisateurs connectés triés",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/by-service/{serviceMedical}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Récupérer les médecins par service médical",
        "description": "Retourne la liste des médecins appartenant à un service médical spécifique",
        "operationId": "getMedecinsByService",
        "parameters": [
          {
            "name": "serviceMedical",
            "in": "path",
            "description": "Service médical à filtrer",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MEDECINE_GENERALE",
                "PEDIATRIE",
                "GYNECOLOGIE",
                "CARDIOLOGIE",
                "DERMATOLOGIE",
                "OPHTALMOLOGIE",
                "ORTHOPEDIE",
                "RADIOLOGIE",
                "LABORATOIRE_ANALYSES",
                "URGENCES",
                "KINESITHERAPIE",
                "DENTISTE",
                "PSYCHIATRIE",
                "NEUROLOGIE",
                "GASTRO_ENTEROLOGIE",
                "PNEUMOLOGIE",
                "ENDOCRINOLOGIE",
                "RHUMATOLOGIE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des médecins récupérée avec succès",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucun médecin trouvé pour ce service",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/utilisateurs/available/{serviceMedical}": {
      "get": {
        "tags": [
          "Gestion des Utilisateurs"
        ],
        "summary": "Rechercher des médecins disponibles",
        "description": "Retourne la liste des médecins disponibles pour un service, date et heure donnés",
        "operationId": "getAvailableMedecins",
        "parameters": [
          {
            "name": "serviceMedical",
            "in": "path",
            "description": "Service médical recherché",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MEDECINE_GENERALE",
                "PEDIATRIE",
                "GYNECOLOGIE",
                "CARDIOLOGIE",
                "DERMATOLOGIE",
                "OPHTALMOLOGIE",
                "ORTHOPEDIE",
                "RADIOLOGIE",
                "LABORATOIRE_ANALYSES",
                "URGENCES",
                "KINESITHERAPIE",
                "DENTISTE",
                "PSYCHIATRIE",
                "NEUROLOGIE",
                "GASTRO_ENTEROLOGIE",
                "PNEUMOLOGIE",
                "ENDOCRINOLOGIE",
                "RHUMATOLOGIE"
              ]
            }
          },
          {
            "name": "jour",
            "in": "query",
            "description": "Date du rendez-vous (format ISO: yyyy-MM-dd)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2025-06-28"
          },
          {
            "name": "heure",
            "in": "query",
            "description": "Heure du rendez-vous (format ISO: HH:mm:ss)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "time"
            },
            "example": "14:30:00"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des médecins disponibles",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucun médecin disponible pour ces critères",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètres de date/heure invalides",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/stats/yearly": {
      "get": {
        "tags": [
          "STATISTIQUES"
        ],
        "summary": "Obtenir les statistiques annuelles",
        "description": "Récupère les statistiques agrégées pour une année spécifique.",
        "operationId": "getYearlyStats",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Année (ex: 2025)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2025
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiques annuelles trouvées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsSurLanneeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Année invalide",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/stats/monthly": {
      "get": {
        "tags": [
          "STATISTIQUES"
        ],
        "summary": "Obtenir les statistiques mensuelles",
        "description": "Récupère les statistiques agrégées pour un mois donné.",
        "operationId": "getMonthlyStats",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Numéro du mois (1-12) ou mot-clé ('last', 'current').",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 7
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiques du mois trouvées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatParMoisResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Numéro de mois invalide",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/stats/daily": {
      "get": {
        "tags": [
          "STATISTIQUES"
        ],
        "summary": "Obtenir les statistiques journalières",
        "description": "Récupère les statistiques pour une journée spécifique. Si la date n'est pas fournie, les statistiques du jour actuel sont retournées.",
        "operationId": "getDailyStats",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date au format YYYY-MM-DD (ex: 2025-07-19). Si omis, la date actuelle est utilisée.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiques journalières trouvées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatDuJourResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Format de date invalide",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/salles/statut/{statutSalle}": {
      "get": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Trouver les salles par statut",
        "description": "Récupère toutes les salles correspondant au statut spécifié",
        "operationId": "findSalleByStatut",
        "parameters": [
          {
            "name": "statutSalle",
            "in": "path",
            "description": "Statut pour filtrer les salles",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DISPONIBLE",
                "OCCUPEE",
                "EN_MAINTENANCE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des salles retournée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucune salle trouvée avec ce statut",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Valeur de statut invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalleResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/salles/serviceMedical/{serviceMedical}": {
      "get": {
        "tags": [
          "Gestion des Salles"
        ],
        "summary": "Rechercher des salles par service médical",
        "description": "Récupère une liste de toutes les salles associées à un service médical spécifique.",
        "operationId": "findSallesByServiceMedical",
        "parameters": [
          {
            "name": "serviceMedical",
            "in": "path",
            "description": "Nom du service médical (ex: MEDECINE_GENERALE, PEDIATRIE)",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MEDECINE_GENERALE",
                "PEDIATRIE",
                "GYNECOLOGIE",
                "CARDIOLOGIE",
                "DERMATOLOGIE",
                "OPHTALMOLOGIE",
                "ORTHOPEDIE",
                "RADIOLOGIE",
                "LABORATOIRE_ANALYSES",
                "URGENCES",
                "KINESITHERAPIE",
                "DENTISTE",
                "PSYCHIATRIE",
                "NEUROLOGIE",
                "GASTRO_ENTEROLOGIE",
                "PNEUMOLOGIE",
                "ENDOCRINOLOGIE",
                "RHUMATOLOGIE"
              ]
            },
            "example": "CARDIOLOGIE"
          }
        ],
        "responses": {
          "200": {
            "description": "Salles trouvées pour le service médical spécifié",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucune salle trouvée pour ce service médical",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Nom de service médical invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalleResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Lister tous les rendez-vous",
        "description": "Récupère la liste complète de tous les rendez-vous programmés",
        "operationId": "findAllRendezVous",
        "responses": {
          "200": {
            "description": "Liste complète des rendez-vous retournée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/utilisateurs/{idUtilisateur}/confirmed/month/{year}/{month}": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Obtenir les rendez-vous confirmés d'un utilisateur pour un mois donné",
        "description": "Récupère tous les rendez-vous confirmés pour un utilisateur spécifique dans un mois et une année donnés.",
        "operationId": "getConfirmedRendezVousByMonth",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "description": "ID de l'utilisateur",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Année des rendez-vous",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Mois des rendez-vous (1-12)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous confirmés",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/statut/{statut}": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Rechercher des rendez-vous par statut",
        "description": "Filtre les rendez-vous selon leur statut (confirmé, annulé, etc.)",
        "operationId": "findRendezVousByStatut",
        "parameters": [
          {
            "name": "statut",
            "in": "path",
            "description": "Statut pour filtrer",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CONFIRME",
                "EN_ATTENTE",
                "ENCOURS",
                "ANNULE",
                "TERMINE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rendez-vous filtrés retournés avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé avec ce statut",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Valeur de statut invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors du filtrage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/salle/{idSalle}": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Rechercher des rendez-vous par salle",
        "description": "Liste tous les rendez-vous programmés dans une salle spécifique",
        "operationId": "findRendezVousBySalleId",
        "parameters": [
          {
            "name": "idSalle",
            "in": "path",
            "description": "ID de la salle à rechercher",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Rendez-vous par salle retournés avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour cette salle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Format d'ID de salle invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/month/{year}/{month}": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Obtenir les rendez-vous pour un mois donné",
        "description": "Récupère tous les rendez-vous dans un mois et une année donnés.",
        "operationId": "getRendezVousByMonth",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Année des rendez-vous",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Mois des rendez-vous (1-12)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "rendezVous non trouvé",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/jour/{jour}": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Rechercher des rendez-vous par jour",
        "description": "Récupère une liste de tous les rendez-vous programmés pour une date spécifique.",
        "operationId": "findRendezVousByJour",
        "parameters": [
          {
            "name": "jour",
            "in": "path",
            "description": "Date du jour à rechercher (format yyyy-MM-dd)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2025-06-28"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous pour le jour retournée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour ce jour",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Format de date invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/rendezvous/available": {
      "get": {
        "tags": [
          "Gestion des Rendez-vous"
        ],
        "summary": "Vérifier la disponibilité d'un créneau",
        "description": "Vérifie si un créneau horaire est disponible pour un médecin et une salle spécifiques.",
        "operationId": "isRendezVousAvailable",
        "parameters": [
          {
            "name": "jour",
            "in": "query",
            "description": "Date du rendez-vous (yyyy-MM-dd)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2025-06-28"
          },
          {
            "name": "heure",
            "in": "query",
            "description": "Heure du rendez-vous (HH:mm:ss)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "14:30:00"
          },
          {
            "name": "medecinId",
            "in": "query",
            "description": "ID du médecin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 3
          },
          {
            "name": "salleId",
            "in": "query",
            "description": "ID de la salle",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Disponibilité vérifiée avec succès (true/false)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Paramètres de requête manquants ou format invalide.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Médecin ou salle non trouvé.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/prescriptions": {
      "get": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Lister toutes les prescriptions",
        "description": "Récupère la liste complète des prescriptions enregistrées",
        "operationId": "findAllPrescription",
        "responses": {
          "200": {
            "description": "Liste des prescriptions retournée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucune prescription trouvée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/prescriptions/patient/{patientId}": {
      "get": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Obtenir les prescriptions par patient",
        "description": "Récupère toutes les prescriptions associées à un patient spécifique",
        "operationId": "findPrescriptionByPatientId",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "ID du patient",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Prescriptions trouvées et retournées",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucune prescription trouvée pour ce patient",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de patient invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/prescriptions/medecin/{medecinId}": {
      "get": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Obtenir les prescriptions par médecin",
        "description": "Récupère toutes les prescriptions rédigées par un médecin spécifique",
        "operationId": "findPrescriptionByMedecinId",
        "parameters": [
          {
            "name": "medecinId",
            "in": "path",
            "description": "ID du médecin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Prescriptions trouvées et retournées",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucune prescription trouvée pour ce médecin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de médecin invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/prescriptions/consultation/{consultationId}": {
      "get": {
        "tags": [
          "Gestion des Prescriptions"
        ],
        "summary": "Obtenir les prescriptions par consultation",
        "description": "Récupère toutes les prescriptions associées à une consultation spécifique",
        "operationId": "findPrescriptionByConsultationId",
        "parameters": [
          {
            "name": "consultationId",
            "in": "path",
            "description": "ID de la consultation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Prescriptions trouvées et retournées",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Aucune prescription trouvée pour cette consultation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de consultation invalide",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/patients/search/{searchTerm}": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Rechercher des patients",
        "description": "Recherche des patients par terme (nom, prénom, email, téléphone, etc.)",
        "operationId": "searchPatients",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "Terme de recherche (minimum 3 caractères)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Dupont"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/patients/rendezvous/status": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Récupérer les rendez-vous d'un patient par son nom et statut",
        "description": "Permet de filtrer les rendez-vous d'un patient en spécifiant une partie de son nom (nom ou prénom) et un statut de rendez-vous.",
        "operationId": "getRendezVousForPatientByStatus",
        "parameters": [
          {
            "name": "patientName",
            "in": "query",
            "description": "Nom ou prénom du patient (recherche partielle)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Jean"
          },
          {
            "name": "statut",
            "in": "query",
            "description": "Statut du rendez-vous (ex: CONFIRME, ANNULE, TERMINE)",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CONFIRME",
                "EN_ATTENTE",
                "ENCOURS",
                "ANNULE",
                "TERMINE"
              ]
            },
            "example": "CONFIRME"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour les critères donnés",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre de requête manquant ou invalide",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/patients/rendezvous/search": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Rechercher les rendez-vous d'un patient par terme",
        "description": "Recherche les rendez-vous d'un patient en utilisant un terme qui peut correspondre à son nom, prénom, email ou ID.",
        "operationId": "getRendezVousByPatientSearchTerm",
        "parameters": [
          {
            "name": "patientSearchTerm",
            "in": "query",
            "description": "Terme de recherche (nom, prénom, email ou ID du patient)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Doe"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rendez-vous récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucun rendez-vous trouvé pour le terme de recherche donné",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre de requête manquant ou invalide",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RendezVousResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/patients/nom/{nom}": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Rechercher par nom exact",
        "description": "Trouve tous les patients portant exactement le nom spécifié",
        "operationId": "findPatientByNom",
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "description": "Nom exact du patient (case insensitive)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Dupont"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/patients/email/{email}": {
      "get": {
        "tags": [
          "Gestion des Patients"
        ],
        "summary": "Rechercher par email exact",
        "description": "Trouve un patient unique par son adresse email exacte",
        "operationId": "findPatientByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email exact du patient",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "patient@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/messagerie/chat.{id}": {
      "get": {
        "tags": [
          "Gestion des Messages"
        ],
        "summary": "Récupérer un message par ID",
        "description": "Endpoint REST pour récupérer un message spécifique",
        "operationId": "getMessageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID du message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Message trouvé",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Message non trouvé",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/historiqueActions/{idHistorique}": {
      "get": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Récupérer une action spécifique par ID",
        "description": "Trouve et retourne les détails complets d'une action particulière dans l'historique",
        "operationId": "findHistoriqueActionById",
        "parameters": [
          {
            "name": "idHistorique",
            "in": "path",
            "description": "ID unique de l'action historique à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Action trouvée et retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Action non trouvée avec l'ID spécifié",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/historiqueActions/utilisateur/{utilisateurId}": {
      "get": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Historique des actions par utilisateur",
        "description": "Récupère la liste chronologique de toutes les actions effectuées par un utilisateur spécifique",
        "operationId": "findHistoriqueActionsByUtilisateurId",
        "parameters": [
          {
            "name": "utilisateurId",
            "in": "path",
            "description": "ID de l'utilisateur dont on veut l'historique",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Historique utilisateur récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucune action trouvée pour cet utilisateur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé avec l'ID spécifié",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/historiqueActions/utilisateur/nom/{utilisateurName}": {
      "get": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Historique des actions par nom d'utilisateur",
        "description": "Récupère la liste chronologique de toutes les actions effectuées par un utilisateur dont le nom contient la chaîne spécifiée.",
        "operationId": "findHistoriqueActionsByUtilisateurName",
        "parameters": [
          {
            "name": "utilisateurName",
            "in": "path",
            "description": "Nom (partiel) de l'utilisateur",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Jean"
          }
        ],
        "responses": {
          "200": {
            "description": "Historique utilisateur récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucune action trouvée pour ce nom d'utilisateur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/historiqueActions/recherche": {
      "get": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Rechercher dans l'historique des actions",
        "description": "Filtre les actions par nom, prénom, email ou mot clé dans la description.",
        "operationId": "rechercherHistorique",
        "parameters": [
          {
            "name": "nom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prenom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "motCle",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/historiqueActions/periode": {
      "get": {
        "tags": [
          "Gestion des Historiques d'Actions"
        ],
        "summary": "Filtrer l'historique par période temporelle",
        "description": "Récupère toutes les actions enregistrées entre deux dates spécifiées (inclusives).",
        "operationId": "findHistoriqueActionsByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Date de début de la période (format: YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-01-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date de fin de la période (format: YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Historique filtré récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucune action trouvée dans la période spécifiée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dates invalides ou période mal formée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur lors du filtrage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoriqueActionResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/{idFacture}/patient": {
      "get": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Obtenir le patient associé à une facture",
        "description": "Récupère les informations du patient lié à une facture spécifique.",
        "operationId": "findPatientByFactureId",
        "parameters": [
          {
            "name": "idFacture",
            "in": "path",
            "description": "ID de la facture pour trouver le patient associé",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/statut/{statutPaiement}": {
      "get": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Filtrer les factures par statut de paiement",
        "description": "Récupère les factures selon leur statut de paiement (PAYE, IMPAYE, EN_RETARD, etc.).",
        "operationId": "findFacturesByStatut",
        "parameters": [
          {
            "name": "statutPaiement",
            "in": "path",
            "description": "Statut de paiement pour le filtrage",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAYEE",
                "IMPAYEE",
                "EN_RETARD",
                "ANNULEE"
              ]
            },
            "example": "PAYE"
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors du filtrage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/statut/impayee": {
      "get": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "afficher les factures impayées",
        "description": "Récupère les factures si impayées.",
        "operationId": "findAllFacturesIMPAYE",
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors du filtrage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/recherche/{idFacture}": {
      "get": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Obtenir une facture par son ID",
        "description": "Récupère tous les détails d'une facture spécifique, y compris les éléments facturés.",
        "operationId": "findById_3",
        "parameters": [
          {
            "name": "idFacture",
            "in": "path",
            "description": "ID unique de la facture à récupérer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la recherche",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/recherche/allFacture": {
      "get": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Lister toutes les factures",
        "description": "Récupère la liste complète des factures avec leurs détails.",
        "operationId": "findAllFactures",
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/mode/{modePaiement}": {
      "get": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Filtrer les factures par mode de paiement",
        "description": "Récupère les factures selon leur mode de paiement (CARTE, ESPECES, VIREMENT, etc.).",
        "operationId": "findFacturesByModePaiement",
        "parameters": [
          {
            "name": "modePaiement",
            "in": "path",
            "description": "Mode de paiement pour le filtrage",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ESPECES",
                "CARTE_BANCAIRE",
                "VIREMENT",
                "CHEQUE",
                "MOBILE_MONEY"
              ]
            },
            "example": "CARTE_BANCAIRE"
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors du filtrage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/{idDossierMedical}/patient": {
      "get": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Obtenir le patient associé à un dossier",
        "description": "Récupère le patient lié à un dossier médical",
        "operationId": "findPatientByDossierMedicalId",
        "parameters": [
          {
            "name": "idDossierMedical",
            "in": "path",
            "description": "ID du dossier médical",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Patient trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Patient ou dossier non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/recherche/{idDossierMedical}": {
      "get": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Obtenir un dossier médical par son ID",
        "description": "Récupère les informations complètes d'un dossier médical",
        "operationId": "findDossierMedicalById",
        "parameters": [
          {
            "name": "idDossierMedical",
            "in": "path",
            "description": "ID du dossier médical",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dossier médical trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Dossier médical non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/recherche/allDossierMedical": {
      "get": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Lister tous les dossiers médicaux",
        "description": "Récupère tous les dossiers médicaux enregistrés",
        "operationId": "findAllDossierMedical",
        "responses": {
          "200": {
            "description": "Liste des dossiers retournée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "Aucun dossier trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DossierMedicalResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DossierMedicalResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/patient/{idPatient}": {
      "get": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Obtenir le dossier médical d'un patient",
        "description": "Récupère le dossier médical associé à un patient",
        "operationId": "findDossierMedicalByPatientId",
        "parameters": [
          {
            "name": "idPatient",
            "in": "path",
            "description": "ID du patient",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dossier médical trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID patient invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Patient ou dossier non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations": {
      "get": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Lister toutes les consultations",
        "description": "Récupère la liste complète des consultations enregistrées",
        "operationId": "findAll",
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsultationResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations/{idConsultation}/rendez-vous": {
      "get": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Obtenir le rendez-vous lié",
        "description": "Récupère le rendez-vous associé à une consultation spécifique",
        "operationId": "findRendezVousByConsultationId",
        "parameters": [
          {
            "name": "idConsultation",
            "in": "path",
            "description": "ID de la consultation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RendezVousResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/consultations/{idConsultation}/dossier-medical": {
      "get": {
        "tags": [
          "Gestion des Consultations"
        ],
        "summary": "Obtenir le dossier médical lié",
        "description": "Récupère le dossier médical associé à une consultation spécifique",
        "operationId": "findDossierMedicalByConsultationId",
        "parameters": [
          {
            "name": "idConsultation",
            "in": "path",
            "description": "ID de la consultation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la récupération",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DossierMedicalResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/Api/V1/clinique/factures/{idFacture}": {
      "delete": {
        "tags": [
          "Gestion des Factures"
        ],
        "summary": "Supprimer une facture",
        "description": "Supprime définitivement une facture du système (opération irréversible).",
        "operationId": "deleteFacture",
        "parameters": [
          {
            "name": "idFacture",
            "in": "path",
            "description": "ID de la facture à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "default": {
            "description": "Erreur interne du serveur lors de la suppression"
          }
        }
      }
    },
    "/Api/V1/clinique/dossierMedical/delete/{idDossierMedical}": {
      "delete": {
        "tags": [
          "Gestion des Dossiers Médicaux"
        ],
        "summary": "Supprimer un dossier médical",
        "description": "Supprime définitivement un dossier médical",
        "operationId": "deleteDossierMedical",
        "parameters": [
          {
            "name": "idDossierMedical",
            "in": "path",
            "description": "ID du dossier à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Dossier supprimé avec succès"
          },
          "400": {
            "description": "ID invalide"
          },
          "404": {
            "description": "Dossier non trouvé"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RoleResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "roleType": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEDECIN",
              "SECRETAIRE"
            ]
          }
        }
      },
      "UtilisateurResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "dateNaissance": {
            "type": "string",
            "format": "date"
          },
          "age": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "serviceMedicalName": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "actif": {
            "type": "boolean"
          },
          "photoProfil": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/RoleResponseDto"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogoutDate": {
            "type": "string",
            "format": "date-time"
          },
          "statusConnect": {
            "type": "string",
            "enum": [
              "CONNECTE",
              "DECONNECTE"
            ]
          }
        }
      },
      "UpdatePasswordRequestDto": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "RoleRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UtilisateurRequestDto": {
        "type": "object",
        "description": "Nouveaux détails de l'utilisateur",
        "properties": {
          "nom": {
            "type": "string",
            "minLength": 1
          },
          "prenom": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string"
          },
          "dateNaissance": {
            "type": "string",
            "format": "date"
          },
          "telephone": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "maxLength": 20,
            "minLength": 8
          },
          "serviceMedicalName": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "actif": {
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/RoleRequestDto"
          }
        },
        "required": [
          "adresse",
          "dateNaissance",
          "email",
          "genre",
          "password",
          "role",
          "telephone"
        ]
      },
      "SalleRequestDto": {
        "type": "object",
        "description": "Détails de la salle à créer",
        "properties": {
          "numeroSalle": {
            "type": "string",
            "minLength": 1
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "statutSalle": {
            "type": "string",
            "enum": [
              "DISPONIBLE",
              "OCCUPEE",
              "EN_MAINTENANCE"
            ]
          }
        },
        "required": [
          "serviceMedical",
          "statutSalle"
        ]
      },
      "SalleResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "numeroSalle": {
            "type": "string"
          },
          "statutSalle": {
            "type": "string",
            "enum": [
              "DISPONIBLE",
              "OCCUPEE",
              "EN_MAINTENANCE"
            ]
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "rendezVousIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RendezVousRequestDto": {
        "type": "object",
        "description": "Détails du rendez-vous à créer",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "heure": {
            "type": "string",
            "example": "14:30:00"
          },
          "jour": {
            "type": "string",
            "format": "date"
          },
          "notes": {
            "type": "string"
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "medecinId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "heure",
          "jour",
          "medecinId",
          "patientId",
          "serviceMedical"
        ]
      },
      "RendezVousResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "patientNomComplet": {
            "type": "string"
          },
          "jour": {
            "type": "string",
            "format": "date"
          },
          "heure": {
            "type": "string",
            "example": "14:30:00"
          },
          "statut": {
            "type": "string",
            "enum": [
              "CONFIRME",
              "EN_ATTENTE",
              "ENCOURS",
              "ANNULE",
              "TERMINE"
            ]
          },
          "notes": {
            "type": "string"
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "medecinId": {
            "type": "integer",
            "format": "int64"
          },
          "medecinNomComplet": {
            "type": "string"
          },
          "salleId": {
            "type": "integer",
            "format": "int64"
          },
          "nomSalle": {
            "type": "string"
          },
          "factureId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PrescriptionRequestDto": {
        "type": "object",
        "description": "Détails de la prescription",
        "properties": {
          "consultantId": {
            "type": "integer",
            "format": "int64"
          },
          "typePrescription": {
            "type": "string",
            "minLength": 1
          },
          "medicaments": {
            "type": "string",
            "minLength": 1
          },
          "instructions": {
            "type": "string",
            "minLength": 1
          },
          "dureePrescription": {
            "type": "string"
          },
          "quantite": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          }
        },
        "required": [
          "quantite"
        ]
      },
      "PrescriptionResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "medecinId": {
            "type": "integer",
            "format": "int64"
          },
          "medecinNomComplet": {
            "type": "string"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "patientNomComplet": {
            "type": "string"
          },
          "typePrescription": {
            "type": "string"
          },
          "medicaments": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "dureePrescription": {
            "type": "string"
          },
          "quantite": {
            "type": "integer",
            "format": "int64"
          },
          "motifConsultation": {
            "type": "string"
          },
          "consultationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DossierMedicalRequestDto": {
        "type": "object",
        "description": "DTO du dossier médical à créer",
        "properties": {
          "groupeSanguin": {
            "type": "string",
            "minLength": 1
          },
          "antecedentsMedicaux": {
            "type": "string"
          },
          "allergies": {
            "type": "string"
          },
          "observations": {
            "type": "string"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "dernierTraitement": {
            "type": "string"
          }
        }
      },
      "PatientRequestDto": {
        "type": "object",
        "description": "Détails du patient et de son dossier médical à créer",
        "properties": {
          "nom": {
            "type": "string",
            "minLength": 1
          },
          "prenom": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string"
          },
          "dateNaissance": {
            "type": "string",
            "format": "date"
          },
          "telephone": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "dossierMedical": {
            "$ref": "#/components/schemas/DossierMedicalRequestDto"
          }
        },
        "required": [
          "adresse",
          "dateNaissance",
          "dossierMedical",
          "email",
          "genre",
          "telephone"
        ]
      },
      "PatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "dateNaissance": {
            "type": "string",
            "format": "date"
          },
          "age": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          }
        }
      },
      "FactureRequestDto": {
        "type": "object",
        "description": "Nouveaux détails de la facture",
        "properties": {
          "rendezVousId": {
            "type": "integer",
            "format": "int64"
          },
          "montant": {
            "type": "number",
            "format": "double"
          },
          "dateEmission": {
            "type": "string",
            "format": "date"
          },
          "statutPaiement": {
            "type": "string",
            "enum": [
              "PAYEE",
              "IMPAYEE",
              "EN_RETARD",
              "ANNULEE"
            ]
          },
          "modePaiement": {
            "type": "string",
            "enum": [
              "ESPECES",
              "CARTE_BANCAIRE",
              "VIREMENT",
              "CHEQUE",
              "MOBILE_MONEY"
            ]
          }
        },
        "required": [
          "modePaiement",
          "montant",
          "rendezVousId",
          "statutPaiement"
        ]
      },
      "FactureResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "montant": {
            "type": "number",
            "format": "double"
          },
          "patientNomComplet": {
            "type": "string"
          },
          "dateEmission": {
            "type": "string",
            "format": "date-time"
          },
          "serviceMedicalNom": {
            "type": "string"
          },
          "statutPaiement": {
            "type": "string",
            "enum": [
              "PAYEE",
              "IMPAYEE",
              "EN_RETARD",
              "ANNULEE"
            ]
          },
          "modePaiement": {
            "type": "string",
            "enum": [
              "ESPECES",
              "CARTE_BANCAIRE",
              "VIREMENT",
              "CHEQUE",
              "MOBILE_MONEY"
            ]
          }
        }
      },
      "ConsultationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "poids": {
            "type": "number",
            "format": "float"
          },
          "taille": {
            "type": "number",
            "format": "float"
          },
          "tensionArterielle": {
            "type": "string"
          },
          "temperature": {
            "type": "number",
            "format": "float"
          },
          "motifs": {
            "type": "string"
          },
          "diagnostic": {
            "type": "string"
          },
          "compteRendu": {
            "type": "string"
          },
          "medecinNomComplet": {
            "type": "string"
          },
          "patientNomComplet": {
            "type": "string"
          },
          "serviceMedecin": {
            "type": "string"
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrescriptionResponseDto"
            }
          }
        }
      },
      "DossierMedicalResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "patient": {
            "$ref": "#/components/schemas/PatientResponseDto"
          },
          "groupeSanguin": {
            "type": "string"
          },
          "antecedentsMedicaux": {
            "type": "string"
          },
          "allergies": {
            "type": "string"
          },
          "observations": {
            "type": "string"
          },
          "consultations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsultationResponseDto"
            }
          },
          "dernierTraitement": {
            "type": "string"
          }
        }
      },
      "ConsultationRequestDto": {
        "type": "object",
        "description": "Détails de la consultation d'urgence à créer",
        "properties": {
          "motifs": {
            "type": "string",
            "minLength": 1
          },
          "tensionArterielle": {
            "type": "string",
            "minLength": 1
          },
          "temperature": {
            "type": "number",
            "format": "float"
          },
          "poids": {
            "type": "number",
            "format": "float"
          },
          "taille": {
            "type": "number",
            "format": "float"
          },
          "compteRendu": {
            "type": "string",
            "minLength": 1
          },
          "diagnostic": {
            "type": "string",
            "minLength": 1
          },
          "rendezVousId": {
            "type": "integer",
            "format": "int64"
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrescriptionRequestDto"
            }
          }
        },
        "required": [
          "poids",
          "taille",
          "temperature"
        ]
      },
      "GroupeRequestDto": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "idCreateur": {
            "type": "integer",
            "format": "int64"
          },
          "idsMembres": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "GroupeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "nom": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createur": {
            "$ref": "#/components/schemas/UtilisateurResponseDto"
          },
          "membres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtilisateurResponseDto"
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "GrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          }
        }
      },
      "HistoriqueActionRequestDto": {
        "type": "object",
        "description": "DTO de l'historique d'action à créer",
        "properties": {
          "action": {
            "type": "string",
            "minLength": 1
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "utilisateurId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "date",
          "utilisateurId"
        ]
      },
      "HistoriqueActionResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "action": {
            "type": "string"
          },
          "utilisateur": {
            "$ref": "#/components/schemas/UtilisateurResponseDto"
          }
        }
      },
      "Consultation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "poids": {
            "type": "number",
            "format": "float"
          },
          "taille": {
            "type": "number",
            "format": "float"
          },
          "temperature": {
            "type": "number",
            "format": "float"
          },
          "tensionArterielle": {
            "type": "string"
          },
          "motifs": {
            "type": "string"
          },
          "compteRendu": {
            "type": "string"
          },
          "diagnostic": {
            "type": "string"
          },
          "dossierMedical": {
            "$ref": "#/components/schemas/DossierMedical"
          },
          "medecin": {
            "$ref": "#/components/schemas/Utilisateur"
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prescription"
            }
          },
          "facture": {
            "$ref": "#/components/schemas/Facture"
          },
          "rendezVous": {
            "$ref": "#/components/schemas/RendezVous"
          }
        }
      },
      "DossierMedical": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "groupeSanguin": {
            "type": "string"
          },
          "antecedentsMedicaux": {
            "type": "string"
          },
          "allergies": {
            "type": "string"
          },
          "dernierTraitement": {
            "type": "string"
          },
          "observations": {
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "consultations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consultation"
            }
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prescription"
            }
          }
        }
      },
      "Facture": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "montant": {
            "type": "number",
            "format": "double"
          },
          "dateEmission": {
            "type": "string",
            "format": "date-time"
          },
          "statutPaiement": {
            "type": "string",
            "enum": [
              "PAYEE",
              "IMPAYEE",
              "EN_RETARD",
              "ANNULEE"
            ]
          },
          "modePaiement": {
            "type": "string",
            "enum": [
              "ESPECES",
              "CARTE_BANCAIRE",
              "VIREMENT",
              "CHEQUE",
              "MOBILE_MONEY"
            ]
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "consultation": {
            "$ref": "#/components/schemas/Consultation"
          },
          "rendezVous": {
            "$ref": "#/components/schemas/RendezVous"
          }
        }
      },
      "Groupe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "nom": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createur": {
            "$ref": "#/components/schemas/Utilisateur"
          },
          "membres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Utilisateur"
            }
          }
        }
      },
      "HistoriqueAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "action": {
            "type": "string"
          },
          "utilisateur": {
            "$ref": "#/components/schemas/Utilisateur"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "contenu": {
            "type": "string"
          },
          "lu": {
            "type": "boolean"
          },
          "expediteur": {
            "$ref": "#/components/schemas/Utilisateur"
          },
          "destinataire": {
            "$ref": "#/components/schemas/Utilisateur"
          },
          "groupe": {
            "$ref": "#/components/schemas/Groupe"
          }
        }
      },
      "Patient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "dateNaissance": {
            "type": "string",
            "format": "date"
          },
          "age": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "dossierMedical": {
            "$ref": "#/components/schemas/DossierMedical"
          },
          "rendezVous": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RendezVous"
            }
          },
          "factures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facture"
            }
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prescription"
            }
          }
        }
      },
      "Prescription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "typePrescription": {
            "type": "string"
          },
          "medicaments": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "dureePrescription": {
            "type": "string"
          },
          "quantite": {
            "type": "integer",
            "format": "int32"
          },
          "consultation": {
            "$ref": "#/components/schemas/Consultation"
          },
          "medecin": {
            "$ref": "#/components/schemas/Utilisateur"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "dossierMedical": {
            "$ref": "#/components/schemas/DossierMedical"
          }
        }
      },
      "RendezVous": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "heure": {
            "type": "string",
            "example": "14:30:00"
          },
          "jour": {
            "type": "string",
            "format": "date"
          },
          "statut": {
            "type": "string",
            "enum": [
              "CONFIRME",
              "EN_ATTENTE",
              "ENCOURS",
              "ANNULE",
              "TERMINE"
            ]
          },
          "notes": {
            "type": "string"
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "medecin": {
            "$ref": "#/components/schemas/Utilisateur"
          },
          "salle": {
            "$ref": "#/components/schemas/Salle"
          },
          "facture": {
            "$ref": "#/components/schemas/Facture"
          },
          "consultation": {
            "$ref": "#/components/schemas/Consultation"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "roleType": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEDECIN",
              "SECRETAIRE"
            ]
          }
        }
      },
      "Salle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "numeroSalle": {
            "type": "string"
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "statutSalle": {
            "type": "string",
            "enum": [
              "DISPONIBLE",
              "OCCUPEE",
              "EN_MAINTENANCE"
            ]
          },
          "rendezVous": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RendezVous"
            }
          }
        },
        "required": [
          "serviceMedical",
          "statutSalle"
        ]
      },
      "Utilisateur": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "dateNaissance": {
            "type": "string",
            "format": "date"
          },
          "age": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "actif": {
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "photoProfil": {
            "type": "string"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogoutDate": {
            "type": "string",
            "format": "date-time"
          },
          "serviceMedical": {
            "type": "string",
            "enum": [
              "MEDECINE_GENERALE",
              "PEDIATRIE",
              "GYNECOLOGIE",
              "CARDIOLOGIE",
              "DERMATOLOGIE",
              "OPHTALMOLOGIE",
              "ORTHOPEDIE",
              "RADIOLOGIE",
              "LABORATOIRE_ANALYSES",
              "URGENCES",
              "KINESITHERAPIE",
              "DENTISTE",
              "PSYCHIATRIE",
              "NEUROLOGIE",
              "GASTRO_ENTEROLOGIE",
              "PNEUMOLOGIE",
              "ENDOCRINOLOGIE",
              "RHUMATOLOGIE"
            ]
          },
          "statusConnect": {
            "type": "string",
            "enum": [
              "CONNECTE",
              "DECONNECTE"
            ]
          },
          "rendezVous": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RendezVous"
            }
          },
          "consultations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consultation"
            }
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prescription"
            }
          },
          "messagesEnvoyes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "messagesRecus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "historiqueActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoriqueAction"
            }
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          }
        }
      },
      "StatsSurLanneeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "annee": {
            "type": "string"
          },
          "nbrRendezVousCONFIRME": {
            "type": "integer",
            "format": "int64"
          },
          "nbrRendezANNULE": {
            "type": "integer",
            "format": "int64"
          },
          "nbrPatientEnrg": {
            "type": "integer",
            "format": "int64"
          },
          "nbrConsultation": {
            "type": "integer",
            "format": "int64"
          },
          "revenu": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "StatParMoisResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "mois": {
            "type": "string"
          },
          "nbrRendezVousCONFIRME": {
            "type": "integer",
            "format": "int64"
          },
          "nbrRendezANNULE": {
            "type": "integer",
            "format": "int64"
          },
          "nbrPatientEnrg": {
            "type": "integer",
            "format": "int64"
          },
          "nbrConsultation": {
            "type": "integer",
            "format": "int64"
          },
          "revenu": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "StatDuJourResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "jour": {
            "type": "string"
          },
          "nbrRendezVousCONFIRME": {
            "type": "integer",
            "format": "int64"
          },
          "nbrRendezANNULE": {
            "type": "integer",
            "format": "int64"
          },
          "nbrPatientEnrg": {
            "type": "integer",
            "format": "int64"
          },
          "nbrConsultation": {
            "type": "integer",
            "format": "int64"
          },
          "revenu": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MessageResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "contenu": {
            "type": "string"
          },
          "lu": {
            "type": "boolean"
          },
          "expediteur": {
            "$ref": "#/components/schemas/UtilisateurResponseDto"
          },
          "destinataire": {
            "$ref": "#/components/schemas/UtilisateurResponseDto"
          },
          "groupe": {
            "$ref": "#/components/schemas/GroupeResponseDto"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}